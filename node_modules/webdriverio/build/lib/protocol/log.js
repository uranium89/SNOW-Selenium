/**
 *
 * Get the log for a given log type. Log buffer is reset after each request.
 * (Not part of the official Webdriver specification).
 *
 * @param {String} type  The [log type](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#log-type). This must be provided.
 * @returns {Object[]} The list of [log entries](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#log-entry-json-object)
 *
 * @see  https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidlog
 * @type protocol
 *
 */

'use strict';

var _Promise = require('babel-runtime/core-js/promise')['default'];

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _utilsErrorHandler = require('../utils/ErrorHandler');

var logTypes = undefined;

function getLogTypes() {
    return logTypes ? _Promise.resolve(logTypes) : this.logTypes().then(function (types) {
        logTypes = types;
        return logTypes;
    });
}

var log = function log(type) {
    var _this = this;

    if (typeof type !== 'string' || type === '') {
        throw new _utilsErrorHandler.ProtocolError('number or type of arguments don\'t agree with log command');
    }

    return getLogTypes.call(this).then(function (types) {
        if (types.value.indexOf(type) === -1) {
            throw new _utilsErrorHandler.ProtocolError('this log type ("' + type + '") is not available for this browser/device');
        }

        return _this.requestHandler.create('/session/:sessionId/log', {
            type: type
        });
    });
};

exports['default'] = log;
module.exports = exports['default'];
